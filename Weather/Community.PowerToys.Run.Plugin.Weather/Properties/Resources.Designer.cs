//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Community.PowerToys.Run.Plugin.Weather.Properties {
    using System;


    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {

        private static global::System.Resources.ResourceManager resourceMan;

        private static global::System.Globalization.CultureInfo resourceCulture;

        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }

        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Community.PowerToys.Run.Plugin.Weather.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }

        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Add to favorites.
        /// </summary>
        public static string plugin_add_favorite {
            get {
                return ResourceManager.GetString("plugin_add_favorite", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to API key is not set.
        /// </summary>
        public static string plugin_api_key_missing {
            get {
                return ResourceManager.GetString("plugin_api_key_missing", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Please set your OpenWeatherMap API key in the settings.
        /// </summary>
        public static string plugin_api_key_instructions {
            get {
                return ResourceManager.GetString("plugin_api_key_instructions", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Copy to clipboard (Ctrl+C).
        /// </summary>
        public static string plugin_copy_to_clipboard {
            get {
                return ResourceManager.GetString("plugin_copy_to_clipboard", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Current weather in {0}.
        /// </summary>
        public static string plugin_current_weather {
            get {
                return ResourceManager.GetString("plugin_current_weather", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Check weather conditions and forecast.
        /// </summary>
        public static string plugin_description {
            get {
                return ResourceManager.GetString("plugin_description", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to An error occurred.
        /// </summary>
        public static string plugin_error_occurred {
            get {
                return ResourceManager.GetString("plugin_error_occurred", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Feels like.
        /// </summary>
        public static string plugin_feels_like {
            get {
                return ResourceManager.GetString("plugin_feels_like", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Forecast.
        /// </summary>
        public static string plugin_forecast {
            get {
                return ResourceManager.GetString("plugin_forecast", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Humidity.
        /// </summary>
        public static string plugin_humidity {
            get {
                return ResourceManager.GetString("plugin_humidity", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Weather.
        /// </summary>
        public static string plugin_name {
            get {
                return ResourceManager.GetString("plugin_name", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to No location specified. Showing weather for your current location..
        /// </summary>
        public static string plugin_no_location {
            get {
                return ResourceManager.GetString("plugin_no_location", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Open detailed weather.
        /// </summary>
        public static string plugin_open_detailed {
            get {
                return ResourceManager.GetString("plugin_open_detailed", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Open settings.
        /// </summary>
        public static string plugin_open_settings {
            get {
                return ResourceManager.GetString("plugin_open_settings", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Remove from favorites.
        /// </summary>
        public static string plugin_remove_favorite {
            get {
                return ResourceManager.GetString("plugin_remove_favorite", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Failed to get weather for {0}.
        /// </summary>
        public static string plugin_search_failed {
            get {
                return ResourceManager.GetString("plugin_search_failed", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Try a different location or check your API key.
        /// </summary>
        public static string plugin_try_different_location {
            get {
                return ResourceManager.GetString("plugin_try_different_location", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to View forecast.
        /// </summary>
        public static string plugin_view_forecast {
            get {
                return ResourceManager.GetString("plugin_view_forecast", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Weather details for {0}.
        /// </summary>
        public static string plugin_weather_details {
            get {
                return ResourceManager.GetString("plugin_weather_details", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Wind speed.
        /// </summary>
        public static string plugin_wind_speed {
            get {
                return ResourceManager.GetString("plugin_wind_speed", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to OpenWeatherMap API Key.
        /// </summary>
        public static string option_api_key {
            get {
                return ResourceManager.GetString("option_api_key", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Get your API key from https://openweathermap.org/api.
        /// </summary>
        public static string option_api_key_desc {
            get {
                return ResourceManager.GetString("option_api_key_desc", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Celsius (Â°C).
        /// </summary>
        public static string option_celsius {
            get {
                return ResourceManager.GetString("option_celsius", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Default Location.
        /// </summary>
        public static string option_default_location {
            get {
                return ResourceManager.GetString("option_default_location", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Location to use when no location is specified.
        /// </summary>
        public static string option_default_location_desc {
            get {
                return ResourceManager.GetString("option_default_location_desc", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Fahrenheit (Â°F).
        /// </summary>
        public static string option_fahrenheit {
            get {
                return ResourceManager.GetString("option_fahrenheit", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Temperature Unit.
        /// </summary>
        public static string option_temperature_unit {
            get {
                return ResourceManager.GetString("option_temperature_unit", resourceCulture);
            }
        }
    }
}